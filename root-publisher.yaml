AWSTemplateFormatVersion: 2010-09-09
Description: Root publisher infrastruture
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    -
      Label:
        default: "CloudFormation Definition"
      Parameters:
        - BucketSourceName
    -
      Label:
        default: "Network Configuration"
      Parameters:
        - AvailabilityZone
        - CIDR
    -
      Label:
        default: "Environment Definition"
      Parameters:
        - Environment
        - EC2KeyPair
        - BrokerChaos
        - BrokerControle

Parameters:

  AvailabilityZone:
    Type: List<AWS::EC2::AvailabilityZone::Name>
    Description: Selecione 3 zonas de disponibilidades diferente da rede atacante

  CIDR:
    Type: String
    Description: VPC CIDR Block (eg 10.0.0.0/16)
    Default: 10.0.0.0/16

  BucketSourceName:
    Type: String
    Description: Bucket with Insfastructure as Code
    Default: iot-reliability-iac

  Environment:
    Type: String
    Description: Infrastructure based name
    Default: prod-iot-publisher

  EC2KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Keypair needed to access the ec2 instances

  BrokerChaos:
    Type: String
    Description: Endereço DNS do broker que será aplicado o chaos

  BrokerControle:
    Type: String
    Description: Endereço DNS do broker que será feito o controle


Resources:

  NetworkStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AZ1: !Select [0, !Ref AvailabilityZone]
        AZ2: !Select [1, !Ref AvailabilityZone]
        AZ3: !Select [2, !Ref AvailabilityZone]
        CIDR: !Ref CIDR
        Environment: !Ref Environment
        PrivateSubnetes: No
      TemplateURL: !Sub https://${BucketSourceName}.s3.amazonaws.com/network.yaml

  PublisherAutoScaling:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        Environment: !Sub ${Environment}
        Subnet1: !GetAtt [NetworkStack,Outputs.PublicSubnet1]
        Subnet2: !GetAtt [NetworkStack,Outputs.PublicSubnet2]
        Subnet3: !GetAtt [NetworkStack,Outputs.PublicSubnet3]
        EC2KeyPair: !Ref EC2KeyPair
        PubPrivateVPC: !GetAtt [NetworkStack,Outputs.PubPrivateVPC]
        AMIId: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
        BrokerChaos: !Ref BrokerChaos
        BrokerControle: !Ref BrokerControle
      TemplateURL: !Sub https://${BucketSourceName}.s3.amazonaws.com/publisher.yaml

Outputs:
  Subnet1:
    Value: !GetAtt [NetworkStack,Outputs.PublicSubnet1]

  Subnet2:
    Value: !GetAtt [NetworkStack,Outputs.PublicSubnet2]

  Subnet3:
    Value: !GetAtt [NetworkStack,Outputs.PublicSubnet3]

  LaunchTemplateName:
    Value: !GetAtt [PublisherAutoScaling,Outputs.LaunchTemplate]